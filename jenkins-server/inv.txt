
ssh -i /home/marko/test1.pem ubuntu@3.64.184.9

3.64.184.9:8080

--ansible hosts--
[jenkins]
ec2-instance ansible_host=3.64.184.9 ansible_user=ubuntu ansible_ssh_private_key_file=/home/marko/test1.pem

status 
sudo service jenkins status

--web-hook--
http://3.64.184.9:8080/github-webhook/
application/jason


--jenkins docker conf--
// https://www.coachdevops.com/2019/05/install-docker-ubuntu-how-to-install.html
// https://www.youtube.com/watch?v=AcjhANnoR68&feature=emb_logo&ab_channel=DevOpsCoach
// https://www.coachdevops.com/2020/05/docker-jenkins-integration-building.html
// https://www.coachdevops.com/2020/05/automate-docker-builds-using-jenkins.html
sudo apt install docker.io -y
sudo usermod -aG docker $USER
newgrp docker
sudo systemctl start docker
sudo systemctl enable docker
sudo systemctl status docker

//install plugins
Docker 
Docker Pipeline 

sudo usermod -a -G docker jenkins
sudo service jenkins restart
sudo systemctl daemon-reload
sudo service docker stop
sudo service docker start
sudo service docker status

// not tested, you should probably add to jenkinsfile command  *docker system prune* to stop memory breakdown

--jenkins terraform conf--
CloudBees AWS Credentials Plugin
Terraform plugin

wget https://releases.hashicorp.com/terraform/0.14.7/terraform_0.14.7_linux_amd64.zip
sudo apt install zip
sudo apt install unzip
sudo mv terraform /usr/bin/
which terraform
// path /usr/bin/




--jenkins ansible conf--
sudo apt update
sudo apt install software-properties-common
sudo apt-add-repository --yes --update ppa:ansible/ansible
sudo apt install ansible

which ansible
// /usr/bin/ansible

Ansible plugin 

--ansible hosts--
[web-server]
ec2-instance ansible_host=18.185.41.78 ansible_user=ubuntu

--ansible.cfg--
[defaults]
host_key_checking = False






// no memory left
// docker system prune